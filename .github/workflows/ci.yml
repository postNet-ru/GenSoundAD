name: CI

on:
  # push:
    # branches: [ main, dev, tmp ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # platform: [ubuntu-latest, macos-latest, windows-latest]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-ci-
            ${{ runner.os }}-cargo-

      - name: Cache system dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-ci-${{ hashFiles('**/.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-ci-
            ${{ runner.os }}-apt-

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install Node dependencies
        run: npm ci

      - name: Lint frontend
        run: npm run lint

      - name: Type check frontend
        run: npx tsc --noEmit

      - name: Build frontend
        run: npm run build

      - name: Check Rust formatting
        working-directory: src-tauri
        run: cargo fmt --all -- --check

      - name: Lint Rust code
        working-directory: src-tauri
        run: cargo clippy -- -D warnings

      - name: Test Rust code
        working-directory: src-tauri
        run: cargo test

      - name: Build Rust (check compilation)
        working-directory: src-tauri
        run: cargo build
